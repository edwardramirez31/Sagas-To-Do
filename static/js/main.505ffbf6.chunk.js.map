{"version":3,"sources":["components/taskSlice.js","components/Form.jsx","components/Task.jsx","containers/Tasks.jsx","App.js","axiosInstance.js","api/djangoTodo.js","app/sagas/tasks/tasksSaga.js","app/sagas/index.js","app/store.js","index.js"],"names":["taskSlice","createSlice","name","initialState","tasks","loading","error","reducers","addTask","state","_action","addTaskSuccess","action","payload","addTaskError","getTask","getTaskSuccess","getTaskError","removeTask","filter","task","id","setIsUpdating","newTasks","map","isUpdating","updateTask","updateTaskSuccess","item","text","actions","Form","dispatch","useDispatch","formSchema","Yup","shape","required","initialValues","validationSchema","onSubmit","data","formikHelpers","completed","resetForm","values","errors","touched","handleChange","handleSubmit","handleBlur","style","display","alignItems","justifyContent","TextField","label","width","value","onChange","Boolean","helperText","onBlur","Button","type","variant","color","endIcon","Icon","Task","useState","setText","ListItem","button","ListItemIcon","Checkbox","edge","checked","tabIndex","disableRipple","onClick","ListItemText","event","target","fullWidth","Typography","ListItemSecondaryAction","IconButton","Save","Edit","DeleteForever","Tasks","useSelector","useEffect","length","List","App","isLoading","className","Container","maxWidth","Paper","padding","LinearProgress","axiosInstance","axios","create","baseURL","DjangoTodo","get","response","delete","put","post","addTaskSaga","getTaskSaga","removeTaskSaga","updateTaskSaga","tasksSaga","console","log","call","newTask","message","all","takeEvery","rootSaga","fork","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","taskReducer","middleware","getDefaultMiddleware","thunk","concat","run","ReactDOM","render","document","getElementById"],"mappings":"6RAIaA,EAAYC,YAAY,CACnCC,KAAM,OACNC,aAAc,CACZC,MAAO,GACPC,SAAS,EACTC,MAAO,MAETC,SAAU,CACRC,QAAS,SAACC,EAAOC,GACfD,EAAMJ,SAAU,GAElBM,eAAgB,SAACF,EAAOG,GAEtBH,EAAML,MAAN,sBAAkBK,EAAML,OAAxB,CAA+BQ,EAAOC,UACtCJ,EAAMJ,SAAU,GAElBS,aAAc,SAACL,EAAOG,GACpBH,EAAMH,MAAQM,EAAOC,QACrBJ,EAAMJ,SAAU,GAElBU,QAAS,SAACN,EAAOC,GACfD,EAAMJ,SAAU,GAElBW,eAAgB,SAACP,EAAOG,GAEtBH,EAAML,MAAN,sBAAkBK,EAAML,OAAxB,YAAkCQ,EAAOC,UACzCJ,EAAMJ,SAAU,GAElBY,aAAc,SAACR,EAAOG,GACpBH,EAAMH,MAAQM,EAAOC,QACrBJ,EAAMJ,SAAU,GAElBa,WAAY,SAACT,EAAOG,GAClBH,EAAML,MAAQK,EAAML,MAAMe,QAAO,SAACC,GAAD,OAAUA,EAAKC,KAAOT,EAAOC,YAEhES,cAAe,SAACb,EAAOG,GACrB,IAAMW,EAAWd,EAAML,MAAMoB,KAAI,SAACJ,GAAD,OAC/BA,EAAKC,KAAOT,EAAOC,QAAnB,2BAAkCO,GAAlC,IAAwCK,YAAY,IAASL,KAE/DX,EAAML,MAAQmB,GAEhBG,WAAY,SAACjB,EAAOC,GAClBD,EAAMJ,SAAU,GAElBsB,kBAAmB,SAAClB,EAAOG,GACzB,IAAMQ,EAAOR,EAAOC,QACdU,EAAWd,EAAML,MAAMoB,KAAI,SAACI,GAChC,OAAIA,EAAKP,KAAOD,EAAKC,GACZ,2BACFD,GADL,IAEEA,KAAMA,EAAKS,KACXJ,YAAY,IAGTG,KAETnB,EAAML,MAAQmB,EACdd,EAAMJ,SAAU,MAKf,EAWHL,EAAU8B,QAVZtB,EADK,EACLA,QACAG,EAFK,EAELA,eACAG,EAHK,EAGLA,aACAC,EAJK,EAILA,QACAC,EALK,EAKLA,eACAC,EANK,EAMLA,aACAC,EAPK,EAOLA,WACAI,EARK,EAQLA,cACAI,EATK,EASLA,WACAC,EAVK,EAULA,kBAGa3B,IAAf,Q,OCjBe+B,MAtDf,WACE,IAAMC,EAAWC,cAEXC,EAAaC,MAAaC,MAAM,CACpCP,KAAMM,MAAaE,aAQrB,OACE,cAAC,IAAD,CACEC,cAAe,CACbT,KAAM,IAERU,iBAAkBL,EAClBM,SAXkB,SAACC,EAAMC,GAC3BV,EAASxB,EAAQ,2BAAKiC,GAAN,IAAYE,WAAW,MACvCD,EAAcE,aAId,SAOG,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,OAAQC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,aAAcC,EAA1C,EAA0CA,aAAcC,EAAxD,EAAwDA,WAAxD,OACC,uBACEC,MAAO,CACLC,QAAS,OACTC,WAAY,WACZC,eAAgB,gBAElBd,SAAUS,EANZ,UAQE,cAACM,EAAA,EAAD,CACEC,MAAM,aACNL,MAAO,CAAEM,MAAO,OAChBvD,KAAK,OACLwD,MAAOb,EAAOhB,KACd8B,SAAUX,EACV1C,MAAOsD,QAAQb,EAAQlB,MAAQiB,EAAOjB,MACtCgC,WAAYd,EAAQlB,MAAQiB,EAAOjB,KACnCiC,OAAQZ,IAEV,cAACa,EAAA,EAAD,CACEC,KAAK,SACLC,QAAQ,YACRC,MAAM,UACNC,QAAS,cAACC,EAAA,EAAD,mBACTjB,MAAO,CAAEM,MAAO,OALlB,wB,kGCmBKY,MAlDf,YAA0D,IAA1ChD,EAAyC,EAAzCA,GAAUD,EAA+B,EAArCS,KAAYc,EAAyB,EAAzBA,UAAWlB,EAAc,EAAdA,WACzC,EAAwB6C,mBAASlD,GAAjC,mBAAOS,EAAP,KAAa0C,EAAb,KACMvC,EAAWC,cAMjB,OACE,eAACuC,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,QAASlC,EACTmC,UAAW,EACXC,eAAa,EACbC,QAAS,kBAAMhD,EAASN,EAAW,CAAEL,KAAIQ,OAAMc,WAAYA,UAG/D,cAACsC,EAAA,EAAD,UACGxD,EACC,cAAC8B,EAAA,EAAD,CAAWG,MAAO7B,EAAM8B,SAjBN,SAACuB,GACzBX,EAAQW,EAAMC,OAAOzB,QAgBsC0B,WAAS,IAE9D,cAACC,EAAA,EAAD,UAAaxD,MAGjB,cAACyD,EAAA,EAAD,UACI7D,EAUA,cAAC8D,EAAA,EAAD,CACEX,KAAK,MACL,aAAW,WACXI,QAAS,kBAAMhD,EAASN,EAAW,CAAEG,OAAMR,KAAIsB,gBAHjD,SAKE,cAAC6C,EAAA,EAAD,CAAMtB,MAAM,cAdd,qCACE,cAACqB,EAAA,EAAD,CAAYX,KAAK,MAAMI,QAAS,kBAAMhD,EAASV,EAAcD,KAA7D,SACE,cAACoE,EAAA,EAAD,CAAMvB,MAAM,cAEd,cAACqB,EAAA,EAAD,CAAYX,KAAK,MAAMI,QAAS,kBAAMhD,EAASd,EAAWG,KAA1D,SACE,cAACqE,EAAA,EAAD,CAAexB,MAAM,yBCvBpByB,MApBf,WACE,IAAMvF,EAAQwF,aAAY,SAACnF,GAAD,OAAWA,EAAMW,KAAKhB,SAC1C4B,EAAWC,cAQjB,OANA4D,qBAAU,WACHzF,EAAM0F,QACT9D,EAASjB,QAKX,cAACgF,EAAA,EAAD,UACG3F,EAAMoB,KAAI,SAACJ,GAAD,OAET,aADA,CACC,EAAD,eAAwBA,GAAbA,EAAKC,UCGT2E,MAff,WACE,IAAMC,EAAYL,aAAY,SAACnF,GAAD,OAAWA,EAAMW,KAAKf,WACpD,OACE,qBAAK6F,UAAU,MAAf,SACE,eAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAACf,EAAA,EAAD,CAAYpB,QAAQ,KAApB,uBACA,cAACoC,EAAA,EAAD,CAAOlD,MAAO,CAAEmD,QAAS,IAAzB,SACE,cAAC,EAAD,MAEDL,EAAY,cAACM,EAAA,EAAD,IAAqB,cAAC,EAAD,U,qECX3BC,G,QAJOC,EAAMC,OAAO,CACjCC,QAAS,6CCDLC,G,qIACJ,oGACyBJ,GAAcK,IAAI,KAD3C,cACQC,EADR,yBAESA,EAASrE,MAFlB,2C,sHAKA,WAAyBpB,GAAzB,uFACyBmF,GAAcK,IAAd,gBAA2BxF,IADpD,cACQyF,EADR,yBAESA,EAASrE,MAFlB,2C,sHAKA,WAAwBpB,GAAxB,uFACyBmF,GAAcO,OAAd,gBAA8B1F,IADvD,cACQyF,EADR,yBAESA,EAASrE,MAFlB,2C,sHAKA,WAAwBpB,EAAIoB,GAA5B,uFACyB+D,GAAcQ,IAAd,gBAA2B3F,EAA3B,KAAkCoB,GAD3D,cACQqE,EADR,yBAESA,EAASrE,MAFlB,2C,wHAKA,WAAwBA,GAAxB,uFACyB+D,GAAcS,KAAK,IAAKxE,GADjD,cACQqE,EADR,yBAESA,EAASrE,MAFlB,2C,8DAMamE,M,YCdLM,I,YAUAC,I,YASAC,I,YASAC,I,YAYeC,IAxCzB,SAAUJ,GAAV,4EAGoB,OAHazE,EAAjC,EAAwB5B,QAAxB,SAEI0G,QAAQC,IAAI,QAFhB,SAG0BC,YAAK,CAACb,GAAY,cAAenE,GAH3D,OAII,OADMiF,EAHV,gBAIUV,YAAIrG,EAAe+G,IAJ7B,+BAMI,OANJ,oCAMUV,YAAIlG,EAAa,KAAM6G,UANjC,uDAUA,SAAUR,KAAV,uEAEkB,OAFlB,kBAEwBM,YAAK,CAACb,GAAY,aAF1C,OAGI,OADMxG,EAFV,gBAGU4G,YAAIhG,EAAeZ,IAH7B,8BAKI,OALJ,mCAKU4G,YAAI/F,EAAa,KAAM0G,UALjC,sDASA,SAAUP,GAAV,4EAEqB,OAFe/F,EAApC,EAA2BR,QAA3B,kBAE2B4G,YAAK,CAACb,GAAY,cAAevF,GAF5D,OAEUyF,EAFV,OAGIS,QAAQC,IAAIV,GAHhB,gDAKIS,QAAQC,IAAI,KAAMG,SALtB,sDASA,SAAUN,GAAV,kFAEiB,OAFjB,IAA2BxG,QAAWQ,EAAtC,EAAsCA,GAAIQ,EAA1C,EAA0CA,KAAMc,EAAhD,EAAgDA,UAAhD,kBAEuB8E,YAAK,CAACb,GAAY,cAAevF,EAAI,CACtDQ,OACAc,cAJN,OAMI,OAJMvB,EAFV,gBAMU4F,YAAIrF,EAAkBP,IANhC,8BAQI,OARJ,mCAQU4F,YAAI/F,EAAa,KAAM0G,UARjC,sDAYe,SAAUL,KAAV,iEAEb,OAFa,SAEPM,YAAI,CACRC,YAAUrH,EAAS0G,IACnBW,YAAU9G,EAASoG,IACnBU,YAAU3G,EAAYkG,IACtBS,YAAUnG,EAAY2F,MANX,wC,gBCpDUS,IAAV,SAAUA,KAAV,iEAEb,OAFa,SAEPF,YAAI,CAACG,YAAKT,MAFH,wCCEf,IAAMU,GAAiBC,cAEjBC,GAAQC,YAAe,CAC3BC,QAAS,CACPhH,KAAMiH,GAERC,WAAY,SAACC,GAAD,OACVA,EAAqB,CAAEC,OAAO,IAASC,OAAOT,OAGlDA,GAAeU,IAAIZ,IAEJI,UCVfS,IAASC,OACP,cAAC,IAAD,CAAUV,MAAOA,GAAjB,SACE,cAAC,EAAD,MAEFW,SAASC,eAAe,W","file":"static/js/main.505ffbf6.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nexport const taskSlice = createSlice({\n  name: 'task',\n  initialState: {\n    tasks: [],\n    loading: false,\n    error: null,\n  },\n  reducers: {\n    addTask: (state, _action) => {\n      state.loading = true;\n    },\n    addTaskSuccess: (state, action) => {\n      // { id: 1, text: \"Hello\", completed: false }\n      state.tasks = [...state.tasks, action.payload];\n      state.loading = false;\n    },\n    addTaskError: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    getTask: (state, _action) => {\n      state.loading = true;\n    },\n    getTaskSuccess: (state, action) => {\n      // { id: 1, text: \"Hello\", completed: false }\n      state.tasks = [...state.tasks, ...action.payload];\n      state.loading = false;\n    },\n    getTaskError: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    removeTask: (state, action) => {\n      state.tasks = state.tasks.filter((task) => task.id !== action.payload);\n    },\n    setIsUpdating: (state, action) => {\n      const newTasks = state.tasks.map((task) =>\n        task.id === action.payload ? { ...task, isUpdating: true } : task\n      );\n      state.tasks = newTasks;\n    },\n    updateTask: (state, _action) => {\n      state.loading = false;\n    },\n    updateTaskSuccess: (state, action) => {\n      const task = action.payload;\n      const newTasks = state.tasks.map((item) => {\n        if (item.id === task.id) {\n          return {\n            ...task,\n            task: task.text,\n            isUpdating: false,\n          };\n        }\n        return item;\n      });\n      state.tasks = newTasks;\n      state.loading = false;\n    },\n  },\n});\n\nexport const {\n  addTask,\n  addTaskSuccess,\n  addTaskError,\n  getTask,\n  getTaskSuccess,\n  getTaskError,\n  removeTask,\n  setIsUpdating,\n  updateTask,\n  updateTaskSuccess,\n} = taskSlice.actions;\n\nexport default taskSlice.reducer;\n// id, text, completed\n// https://edwardramirez.pythonanywhere.com/\n// https://edwardramirez.pythonanywhere.com/task/1/\n","import { Button, TextField } from '@material-ui/core';\nimport Icon from '@material-ui/core/Icon';\nimport { Formik } from 'formik';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport { addTask } from './taskSlice';\n\nfunction Form() {\n  const dispatch = useDispatch();\n\n  const formSchema = Yup.object().shape({\n    text: Yup.string().required(),\n  });\n\n  const submitHandler = (data, formikHelpers) => {\n    dispatch(addTask({ ...data, completed: false }));\n    formikHelpers.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        text: '',\n      }}\n      validationSchema={formSchema}\n      onSubmit={submitHandler}\n    >\n      {({ values, errors, touched, handleChange, handleSubmit, handleBlur }) => (\n        <form\n          style={{\n            display: 'flex',\n            alignItems: 'baseline',\n            justifyContent: 'space-around',\n          }}\n          onSubmit={handleSubmit}\n        >\n          <TextField\n            label=\"Add a text\"\n            style={{ width: '85%' }}\n            name=\"text\"\n            value={values.text}\n            onChange={handleChange}\n            error={Boolean(touched.text && errors.text)}\n            helperText={touched.text && errors.text}\n            onBlur={handleBlur}\n          />\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            endIcon={<Icon>send</Icon>}\n            style={{ width: '10%' }}\n          >\n            Add\n          </Button>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nexport default Form;\n","/* eslint-disable react/prop-types */\nimport {\n  Checkbox,\n  IconButton,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport { DeleteForever, Edit, Save } from '@material-ui/icons';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { removeTask, setIsUpdating, updateTask } from './taskSlice';\n\nfunction Task({ id, text: task, completed, isUpdating }) {\n  const [text, setText] = useState(task);\n  const dispatch = useDispatch();\n\n  const textChangeHandler = (event) => {\n    setText(event.target.value);\n  };\n\n  return (\n    <ListItem button>\n      <ListItemIcon>\n        <Checkbox\n          edge=\"start\"\n          checked={completed}\n          tabIndex={-1}\n          disableRipple\n          onClick={() => dispatch(updateTask({ id, text, completed: !completed }))}\n        />\n      </ListItemIcon>\n      <ListItemText>\n        {isUpdating ? (\n          <TextField value={text} onChange={textChangeHandler} fullWidth />\n        ) : (\n          <Typography>{text}</Typography>\n        )}\n      </ListItemText>\n      <ListItemSecondaryAction>\n        {!isUpdating ? (\n          <>\n            <IconButton edge=\"end\" onClick={() => dispatch(setIsUpdating(id))}>\n              <Edit color=\"primary\" />\n            </IconButton>\n            <IconButton edge=\"end\" onClick={() => dispatch(removeTask(id))}>\n              <DeleteForever color=\"secondary\" />\n            </IconButton>\n          </>\n        ) : (\n          <IconButton\n            edge=\"end\"\n            aria-label=\"comments\"\n            onClick={() => dispatch(updateTask({ text, id, completed }))}\n          >\n            <Save color=\"primary\" />\n          </IconButton>\n        )}\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n}\n\nexport default Task;\n","import { List } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Task from '../components/Task';\nimport { getTask } from '../components/taskSlice';\n\nfunction Tasks() {\n  const tasks = useSelector((state) => state.task.tasks);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!tasks.length) {\n      dispatch(getTask());\n    }\n  });\n\n  return (\n    <List>\n      {tasks.map((task) => (\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        <Task key={task.id} {...task} />\n      ))}\n    </List>\n  );\n}\n\nexport default Tasks;\n","import { Container, LinearProgress, Paper, Typography } from '@material-ui/core';\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport './App.css';\nimport Form from './components/Form';\nimport Tasks from './containers/Tasks';\n\nfunction App() {\n  const isLoading = useSelector((state) => state.task.loading);\n  return (\n    <div className=\"App\">\n      <Container maxWidth=\"md\">\n        <Typography variant=\"h3\">To-Do App</Typography>\n        <Paper style={{ padding: 20 }}>\n          <Form />\n        </Paper>\n        {isLoading ? <LinearProgress /> : <Tasks />}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import axios from 'axios';\n\nconst axiosInstance = axios.create({\n  baseURL: 'https://edwardramirez.pythonanywhere.com',\n});\n\nexport default axiosInstance;\n","import axiosInstance from '../axiosInstance';\n\nclass DjangoTodo {\n  static async getTasks() {\n    const response = await axiosInstance.get('/');\n    return response.data;\n  }\n\n  static async getTaskById(id) {\n    const response = await axiosInstance.get(`/task/${id}`);\n    return response.data;\n  }\n\n  static async deleteTask(id) {\n    const response = await axiosInstance.delete(`/task/${id}`);\n    return response.data;\n  }\n\n  static async updateTask(id, data) {\n    const response = await axiosInstance.put(`/task/${id}/`, data);\n    return response.data;\n  }\n\n  static async createTask(data) {\n    const response = await axiosInstance.post('/', data);\n    return response.data;\n  }\n}\n\nexport default DjangoTodo;\n","/* eslint-disable no-console */\nimport { all, put, call, takeEvery } from 'redux-saga/effects';\nimport {\n  addTask,\n  addTaskError,\n  addTaskSuccess,\n  getTask,\n  getTaskError,\n  getTaskSuccess,\n  removeTask,\n  updateTask,\n  updateTaskSuccess,\n} from '../../../components/taskSlice';\nimport DjangoTodo from '../../../api/djangoTodo';\n\nfunction* addTaskSaga({ payload: data }) {\n  try {\n    console.log('HERE');\n    const newTask = yield call([DjangoTodo, 'createTask'], data);\n    yield put(addTaskSuccess(newTask));\n  } catch (error) {\n    yield put(addTaskError(error.message));\n  }\n}\n\nfunction* getTaskSaga() {\n  try {\n    const tasks = yield call([DjangoTodo, 'getTasks']);\n    yield put(getTaskSuccess(tasks));\n  } catch (error) {\n    yield put(getTaskError(error.message));\n  }\n}\n\nfunction* removeTaskSaga({ payload: id }) {\n  try {\n    const response = yield call([DjangoTodo, 'deleteTask'], id);\n    console.log(response);\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nfunction* updateTaskSaga({ payload: { id, text, completed } }) {\n  try {\n    const task = yield call([DjangoTodo, 'updateTask'], id, {\n      text,\n      completed,\n    });\n    yield put(updateTaskSuccess(task));\n  } catch (error) {\n    yield put(getTaskError(error.message));\n  }\n}\n\nexport default function* tasksSaga() {\n  // eslint-disable-next-line redux-saga/no-unhandled-errors\n  yield all([\n    takeEvery(addTask, addTaskSaga),\n    takeEvery(getTask, getTaskSaga),\n    takeEvery(removeTask, removeTaskSaga),\n    takeEvery(updateTask, updateTaskSaga),\n  ]);\n}\n","import { all, fork } from 'redux-saga/effects';\nimport tasksSaga from './tasks/tasksSaga';\n\nexport default function* rootSaga() {\n  // eslint-disable-next-line redux-saga/no-unhandled-errors\n  yield all([fork(tasksSaga)]);\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport taskReducer from '../components/taskSlice';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = configureStore({\n  reducer: {\n    task: taskReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({ thunk: false }).concat(sagaMiddleware),\n});\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './app/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// https://github.com/conventional-changelog/commitlint#getting-started\n// https://typicode.github.io/husky/#/?id=create-a-hook\n// yarn add -D husky\n// yarn husky install\n// yarn husky add .husky/pre-commit \"yarn lint-staged\"\n// yarn husky add .husky/pre-commit \"yarn test\"\n// npm install --save-dev @commitlint/config-conventional @commitlint/cli\n// yarn husky add .husky/commit-msg 'npx --no-install commitlint --edit \"\"'\n// yarn add eslint\n// yarn add lint-staged\n// yarn eslint --init\n"],"sourceRoot":""}