{"version":3,"sources":["components/taskSlice.js","components/Form.js","components/Task.js","containers/Tasks.js","App.js","axiosInstance.js","api/djangoTodo.js","app/sagas/tasks/tasksSaga.js","app/sagas/index.js","app/store.js","index.js"],"names":["taskSlice","createSlice","name","initialState","tasks","loading","error","reducers","addTask","state","_action","addTaskSuccess","action","payload","addTaskError","getTask","getTaskSuccess","getTaskError","removeTask","filter","task","id","checkHandler","taskIndex","findIndex","isDone","setIsUpdating","newTasks","map","isUpdating","updateTask","text","actions","Form","dispatch","useDispatch","formSchema","Yup","shape","required","initialValues","validationSchema","onSubmit","data","formikHelpers","completed","resetForm","values","errors","touched","handleChange","handleSubmit","handleBlur","style","display","alignItems","justifyContent","TextField","label","width","value","onChange","Boolean","helperText","onBlur","Button","variant","color","endIcon","Icon","Task","useState","setText","ListItem","button","ListItemIcon","Checkbox","edge","checked","tabIndex","disableRipple","onClick","ListItemText","event","target","fullWidth","Typography","ListItemSecondaryAction","IconButton","Save","Edit","DeleteForever","Tasks","useSelector","useEffect","length","List","App","className","Container","maxWidth","Paper","padding","axiosInstance","axios","create","baseURL","DjangoTodo","get","response","delete","put","console","log","post","addTaskSaga","getTaskSaga","tasksSaga","call","newTask","message","all","takeEvery","rootSaga","fork","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","middleware","getDefaultMiddleware","thunk","concat","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b358a106.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const taskSlice = createSlice({\n  name: \"task\",\n  initialState: {\n    tasks: [],\n    loading: false,\n    error: null,\n  },\n  reducers: {\n    addTask: (state, _action) => {\n      state.loading = true;\n    },\n    addTaskSuccess: (state, action) => {\n      // { id: 1, text: \"Hello\", completed: false }\n      state.tasks = [...state.tasks, action.payload];\n      state.loading = false;\n    },\n    addTaskError: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    getTask: (state, _action) => {\n      state.loading = true;\n    },\n    getTaskSuccess: (state, action) => {\n      // { id: 1, text: \"Hello\", completed: false }\n      state.tasks = [...state.tasks, ...action.payload];\n      state.loading = false;\n    },\n    getTaskError: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    removeTask: (state, action) => {\n      state.tasks = state.tasks.filter((task) => task.id !== action.payload);\n    },\n    checkHandler: (state, action) => {\n      const taskIndex = state.tasks.findIndex(\n        (task) => task.id === action.payload\n      );\n      state.tasks[taskIndex].isDone = !state.tasks[taskIndex].isDone;\n    },\n    setIsUpdating: (state, action) => {\n      const newTasks = state.tasks.map((task) => {\n        return task.id === action.payload\n          ? { ...task, isUpdating: true }\n          : task;\n      });\n      state.tasks = newTasks;\n    },\n    updateTask: (state, action) => {\n      const newTasks = state.tasks.map((task) => {\n        if (task.id === action.payload.id) {\n          return {\n            ...task,\n            task: action.payload.text,\n            isUpdating: false,\n          };\n        }\n        return task;\n      });\n      state.tasks = newTasks;\n    },\n  },\n});\n\nexport const {\n  addTask,\n  addTaskSuccess,\n  addTaskError,\n  getTask,\n  getTaskSuccess,\n  getTaskError,\n  removeTask,\n  checkHandler,\n  setIsUpdating,\n  updateTask,\n} = taskSlice.actions;\n\nexport default taskSlice.reducer;\n// id, text, completed\n// https://edwardramirez.pythonanywhere.com/\n// https://edwardramirez.pythonanywhere.com/task/1/\n","import { Button, TextField } from \"@material-ui/core\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { Formik } from \"formik\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport { addTask } from \"./taskSlice\";\n\nfunction Form() {\n  const dispatch = useDispatch();\n\n  const formSchema = Yup.object().shape({\n    text: Yup.string().required(),\n  });\n\n  const submitHandler = (data, formikHelpers) => {\n    dispatch(addTask({ ...data, completed: false }));\n    formikHelpers.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        text: \"\",\n      }}\n      validationSchema={formSchema}\n      onSubmit={submitHandler}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleSubmit,\n        handleBlur,\n      }) => (\n        <form\n          style={{\n            display: \"flex\",\n            alignItems: \"baseline\",\n            justifyContent: \"space-around\",\n          }}\n          onSubmit={handleSubmit}\n        >\n          <TextField\n            label=\"Add a text\"\n            style={{ width: \"85%\" }}\n            name=\"text\"\n            value={values.text}\n            onChange={handleChange}\n            error={Boolean(touched.text && errors.text)}\n            helperText={touched.text && errors.text}\n            onBlur={handleBlur}\n          />\n          <Button\n            // type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            endIcon={<Icon>send</Icon>}\n            style={{ width: \"10%\" }}\n          >\n            Add\n          </Button>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nexport default Form;\n","import {\n  Checkbox,\n  IconButton,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { DeleteForever, Edit, Save } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  checkHandler,\n  removeTask,\n  setIsUpdating,\n  updateTask,\n} from \"./taskSlice\";\n\nfunction Task({ id, text: task, completed, isUpdating }) {\n  const [text, setText] = useState(task);\n  const dispatch = useDispatch();\n\n  const textChangeHandler = (event) => {\n    setText(event.target.value);\n  };\n  return (\n    <ListItem button>\n      <ListItemIcon>\n        <Checkbox\n          edge=\"start\"\n          checked={completed}\n          tabIndex={-1}\n          disableRipple\n          onClick={() => dispatch(checkHandler(id))}\n        />\n      </ListItemIcon>\n      <ListItemText>\n        {isUpdating ? (\n          <TextField value={text} onChange={textChangeHandler} fullWidth />\n        ) : (\n          <Typography>{text}</Typography>\n        )}\n      </ListItemText>\n      <ListItemSecondaryAction>\n        {!isUpdating ? (\n          <>\n            <IconButton edge=\"end\" onClick={() => dispatch(setIsUpdating(id))}>\n              <Edit color=\"primary\" />\n            </IconButton>\n            <IconButton edge=\"end\" onClick={() => dispatch(removeTask(id))}>\n              <DeleteForever color=\"secondary\" />\n            </IconButton>\n          </>\n        ) : (\n          <IconButton\n            edge=\"end\"\n            aria-label=\"comments\"\n            onClick={() => dispatch(updateTask({ text, id }))}\n          >\n            <Save color=\"primary\" />\n          </IconButton>\n        )}\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n}\n\nexport default Task;\n","import { List } from \"@material-ui/core\";\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Task from \"../components/Task\";\nimport { getTask } from \"../components/taskSlice\";\n\nfunction Tasks() {\n  const tasks = useSelector((state) => state.task.tasks);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!tasks.length) {\n      dispatch(getTask());\n    }\n  });\n\n  return (\n    <List>\n      {tasks.map((task) => {\n        return <Task key={task.id} {...task} />;\n      })}\n    </List>\n  );\n}\n\nexport default Tasks;\n","import { Container, Paper, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport Tasks from \"./containers/Tasks\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container maxWidth=\"md\">\n        <Typography variant=\"h3\">To-Do App</Typography>\n        <Paper style={{ padding: 20 }}>\n          <Form />\n        </Paper>\n        <Tasks />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import axios from \"axios\";\n\nconst axiosInstance = axios.create({\n  baseURL: \"https://edwardramirez.pythonanywhere.com\",\n});\n\nexport default axiosInstance;\n","import axiosInstance from \"../axiosInstance\";\n\nclass DjangoTodo {\n  static async getTasks() {\n    const response = await axiosInstance.get(\"/\");\n    return response.data;\n  }\n\n  static async getTaskById(id) {\n    const response = await axiosInstance.get(`/task/${id}`);\n    return response.data;\n  }\n\n  static async deleteTask(id) {\n    const response = await axiosInstance.delete(`/task/${id}`);\n    return response.data;\n  }\n\n  static async updateTask(id, data) {\n    const response = await axiosInstance.put(`/task/${id}`, data);\n    return response.data;\n  }\n\n  static async createTask(data) {\n    console.log(data);\n    const response = await axiosInstance.post(\"/\", data);\n    return response.data;\n  }\n}\n\nexport default DjangoTodo;\n","import { all, put, call, takeEvery } from \"redux-saga/effects\";\nimport {\n  addTask,\n  addTaskError,\n  addTaskSuccess,\n  getTask,\n  getTaskError,\n  getTaskSuccess,\n} from \"../../../components/taskSlice\";\nimport DjangoTodo from \"../.././../api/djangoTodo\";\n\nfunction* addTaskSaga({ payload: data }) {\n  try {\n    const newTask = yield call([DjangoTodo, \"createTask\"], data);\n    yield put(addTaskSuccess(newTask));\n  } catch (error) {\n    yield put(addTaskError(error.message));\n  }\n}\n\nfunction* getTaskSaga() {\n  try {\n    const tasks = yield call([DjangoTodo, \"getTasks\"]);\n    yield put(getTaskSuccess(tasks));\n  } catch (error) {\n    yield put(getTaskError(error.message));\n  }\n}\n\nexport default function* tasksSaga() {\n  yield all([takeEvery(addTask, addTaskSaga), takeEvery(getTask, getTaskSaga)]);\n}\n","import { all, fork } from \"redux-saga/effects\";\nimport tasksSaga from \"./tasks/tasksSaga\";\n\nexport default function* rootSaga() {\n  yield all([fork(tasksSaga)]);\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport taskSlice from \"../components/taskSlice\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = configureStore({\n  reducer: {\n    task: taskSlice,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({ thunk: false }).concat(sagaMiddleware),\n});\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./app/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}